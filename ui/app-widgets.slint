import { Button, LineEdit } from "std-widgets.slint";

export component PasswordInput {
    // container properties
    in property <brush> background <=> container.background;
    in property <brush> border-color <=> container.border-color;
    in property <length> border-width <=> container.border-width;
    in property <length> border-radius <=> container.border-radius;
    in property <length> border-top-left-radius <=> container.border-top-left-radius;
    in property <length> border-top-right-radius <=> container.border-top-right-radius;
    in property <length> border-bottom-left-radius <=> container.border-bottom-left-radius;
    in property <length> border-bottom-right-radius <=> container.border-bottom-right-radius;
    // placeholder properties
    in property <string> placeholder-text;
    in-out property <brush> placeholder-text-color <=> placeholder.color;
    // text-input properties
    in-out property <string> input-text <=> text-input.text;
    in property <brush> input-text-color <=> text-input.color;
    in property <length> input-cursor-width <=> text-input.text-cursor-width;
    in property <InputType> input-type <=> text-input.input-type;
    in property <length> font-size <=> text-input.font-size;
    in property <bool> enabled <=> text-input.enabled;
    in property <bool> has-focus: text-input.has-focus;
    in property <TextHorizontalAlignment> horizontal-alignment <=> text-input.horizontal-alignment;
    in property <bool> read-only <=> text-input.read-only;
    in property <int> font-weight <=> text-input.font-weight;
    in property <color> selection-background-color <=> text-input.selection-background-color;
    in property <color> selection-foreground-color <=> text-input.selection-foreground-color;

    property <bool> show-password: false;
    
    callback accepted(text: string);
    callback edited(text: string);
    callback key-pressed(event: KeyEvent) -> EventResult;
    callback key-released(event: KeyEvent) -> EventResult;

    container := Rectangle {
        width: 100%;
        height: 100%;

        placeholder := Text {
            x: 10px;
            width: 100%;
            height: 100%;
            text: text-input.text.is-empty ? placeholder-text : "";
            vertical-alignment: center;
            font-size: text-input.font-size;
            font-italic: text-input.font-italic;
            font-weight: text-input.font-weight;
            font-family: text-input.font-family;
            horizontal-alignment: text-input.horizontal-alignment;
        }
        
        Rectangle {
            x: 10px;
            width: parent.width - show-password-icon.width - show-password-icon.margin * 6;
            height: 100%;
            clip: true;

            text-input := TextInput {
                x: min(0px, parent.width - self.width);
                width: max(parent.width, self.preferred-width);
                height: 100%;
                font-size: 50% * self.height;
                vertical-alignment: center;
                single-line: true;
                wrap: no-wrap;
                input-type: root.show-password ? text : password;

                accepted => {
                    root.accepted(self.text);
                }
        
                edited => {
                    root.edited(self.text);
                }
        
                key-pressed(event) => {
                    root.key-pressed(event)
                }
        
                key-released(event) => {
                    root.key-released(event)
                }
            }
        }

        show-password-icon := Image {
            property <length> margin: (container.height - self.height) * 0.5;
    
            source: root.show_password
                ? @image-url("../assets/eye_open.png")
                : @image-url("../assets/eye_close.png");
            x: container.width - self.width - margin;
            y: margin;
            width: self.height;
            height: 80%;

            TouchArea {
                clicked => {
                    root.show_password = !root.show_password;
                }
            }
        }
    }
}